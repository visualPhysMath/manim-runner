name: Run Manim (paste code)

on:
  workflow_dispatch:
    inputs:
      code:
        description: "Paste your Manim code (Python)"
        required: true
      scene:
        description: "Scene name (auto-detect if blank)"
        required: false
        default: ""
      quality:
        description: "Quality (-ql/-qm/-qh/-qk)"
        required: false
        default: "-qm"
      resolution:
        description: "Resolution WxH (e.g., 1920x1080)"
        required: false
        default: "1920x1080"
      outfile:
        description: "Output base name (no extension)"
        required: false
        default: "result"

jobs:
  render:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Docker diagnostics
        shell: bash
        run: |
          docker --version
          docker info || true

      - name: Write scene.py from input
        shell: bash
        run: |
          cat > scene.py << 'PY'
          ${{ github.event.inputs.code }}
          PY
          echo "---- scene.py (first 50 lines) ----"
          sed -n '1,50p' scene.py || true

      - name: Detect scene name if empty
        id: detect
        shell: bash
        run: |
          SCN="${{ github.event.inputs.scene }}"
          if [ -z "$SCN" ]; then
            SCN=$(grep -Eo 'class[[:space:]]+[A-Za-z0-9_]+[[:space:]]*\((Scene|ThreeDScene)\)' scene.py \
              | head -n 1 | sed -E 's/class[[:space:]]+([A-Za-z0-9_]+).*/\1/')
            [ -z "$SCN" ] && SCN=MainScene
          fi
          echo "scene=$SCN" >> "$GITHUB_OUTPUT"
          echo "Use Scene: $SCN"

      - name: Pre-pull official image (Docker Hub)
        shell: bash
        run: |
          docker pull manimcommunity/manim:stable

      - name: Run Manim (Cairo)
        shell: bash
        run: |
          set -e
          IFS="x" read -r W H <<<'${{ github.event.inputs.resolution }}'
          docker run --rm --network none --cap-drop=ALL --pids-limit=256 -m 2g \
            -v "$PWD":/work -w /work \
            manimcommunity/manim:stable \
            bash -lc "python -m manim ${{ github.event.inputs.quality }} --renderer=cairo -r ${W},${H} scene.py ${{ steps.detect.outputs.scene }} -o ${{ github.event.inputs.outfile }}.mp4"
          echo "Outputs in media/:"
          find media -type f -name '*.mp4' | sed -n '1,10p'

      - name: Collect MP4
        shell: bash
        run: |
          mkdir -p outputs
          MP4=$(find media -name '*.mp4' | head -n 1)
          if [ -z "$MP4" ]; then
            echo "No MP4 found"; exit 1
          fi
          cp "$MP4" "outputs/${{ github.event.inputs.outfile }}.mp4"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: manim-video
          path: outputs/*.mp4
          retention-days: 30
